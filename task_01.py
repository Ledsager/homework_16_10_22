# Вычислить число c заданной точностью d

# Пример:
# 3,14159265358979323846264338327
# - при $d = 0.001, π = 3.141.$    $10^{-1} ≤ d ≤10^{-10}$
def pi_accuracy():
    pi = 3
    k = 2
    b = True
    # чем больше итераций в цикле тем точнее пи, можно передавать значение точности
    for i in range(1, 100000):
        if b:
            pi = pi + 4 / (k * (k + 1) * (k + 2))
            b = False
        else:
            pi = pi - 4 / (k * (k + 1) * (k + 2))
            b = True
        k += 2
    return pi


d = float(input(
    'Введите точность с которой необходимо вычислить число пи (0.1 ... 0.01 и т.д.) : '))

# вычисление количества знаков после запятой(точность)
if (d <= 0.1) and (d >= pow(10, -10)):
    accuracy = 1
    while ((d * 10) < 1):
        d = d * 10
        accuracy += 1
    print(round(pi_accuracy(), accuracy))
else:
    print('Введено неверное значение точности!')


# pi=pi+(4/(2*3*4))-(4/(4*5*6))+(4/(6*7*8)-(4/(8*9*10))) - ряд Нилаканта
